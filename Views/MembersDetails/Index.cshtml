@*Defining Model*@
@using RopeyDVDManagementSystem.Models.ViewModels;
@model IEnumerable<MemberDetailViewModel>;

@*Defining ViewData*@
@{
    ViewData["Title"] = "Member Loan History";
    ViewData["Section"] = "MemberDetails";
    Layout = "_LayoutAdmin";
}

@*Coding*@
<div class="row">
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body mx-3">
                <h4 class="card-title mb-2">Member's Loan Details</h4>
                <p class="card-description mb-4"> Choose a member to view their loan deatils.</p>

                <div class="row">
                    <div class="col">
                        <form asp-action="Index" method="post">
                            <div class="form-group row mb-0">
                                <label class="col-sm-3 col-form-label">Member Number / Last Name :</label>
                                <div class="col">
                                    <div id="the-basics">
                                        <input class="typeahead" type="text" name="SearchMemberNumber" placeholder="Search . . ." value=@ViewBag.SearchMemberNumber>
                                    </div>
                                </div>
                            </div>
                            <div class="float-right mt-3">
                                <a  class="btn btn-inverse-info" asp-controller="MembersDetails" asp-action="ActiveMember">
                                    <i class="mdi mdi-calendar-multiple" style="align-content:space-evenly;"></i>
                                    Inactive Member
                                </a>
                            </div>
                            <div class="float-right mt-3 mr-3">
                                <button type="submit" class="btn btn-inverse-primary" value="Search">
                                    <i class="mdi mdi-account-search" style="align-content:space-evenly;"></i>
                                    Search
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@if (Model != null && Model.Count() > 0)
{
    <div class="row">
        <div class="col-lg-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body mb-3 mx-3"> 
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr class="text-center">
                                    <th class="text-white text-center">Member Number</th>
                                    <th class="text-white text-center">First Name</th>
                                    <th class="text-white text-center">Last Name</th>
                                    <th class="text-white text-center">Membership Category </th>
                                    <th class="text-white text-center">Current Loan Count</th>
                                    <th class="text-white text-center">Remarks</th>
                                    <th class="text-white"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr  class="border-0 text-center">
                                        <td class="align-middle">@item.MemberNumber</td>
                                        <td class="align-middle">@item.MemberFirstName</td>
                                        <td class="align-middle">@item.MemberLastName</td>
                                        <td class="align-middle">@item.MembershipCategory</td>
                                        <td class="align-middle">@item.LoanCount</td>

                                        <td class="align-middle">
                                            @if (item.Remarks != "")
                                            {
                                                    <span class="text-danger">@item.Remarks</span>
                                            }
                                        </td>
 
                                        <td class="align-middle">
                                            <a class="btn btn-inverse-info" style="margin:5px;" asp-action="Details" asp-route-id="@item.MemberNumber">
                                                <i class="mdi mdi-format-list-bulleted-type"></i>
                                                Loan History
                                            </a>
                                        </td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{
        <div class="row">
            <div class="col-lg-12 grid-margin stretch-card">
                <div class="card">
                    <div class="card-body d-flex flex-column justify-content-center text-center" >

                        <div class="d-flex justify-content-center">
                            <script src="https://unpkg.com/@@lottiefiles/lottie-player@latest/dist/lottie-player.js"></script>
                            <lottie-player src="https://assets7.lottiefiles.com/packages/lf20_a72gydf0.json"  background="transparent"  speed="1"  style="width: 400px; height: 400px;"  loop  autoplay></lottie-player>
                        </div>

                        <p class="text-gray text-center" >Uh Oh! Details for particular Memeber Number were not found.</p>
                    </div>
                </div>
            </div>
        </div>
}






@section AddCustomScripts{
    <script>
        (function($) {
            'use strict';
            var substringMatcher = function(strs) {
                return function findMatches(q, cb) {
                    var matches, substringRegex;

                    // an array that will be populated with substring matches
                    matches = [];

                    // regex used to determine if a string contains the substring `q`
                    var substrRegex = new RegExp(q, 'i');

                    // iterate through the pool of strings and for any string that
                    // contains the substring `q`, add it to the `matches` array
                    for (var i = 0; i < strs.length; i++) {
                        if (substrRegex.test(strs[i])) {
                            matches.push(strs[i]);
                        }
                    }

                    cb(matches);
                };
            };

            var states = @Html.Raw(ViewBag.MemberSearchList);

            $('#the-basics .typeahead').typeahead({
                hint: true,
                highlight: true,
                minLength: 1
            }, {
                name: 'states',
                source: substringMatcher(states)
            });

            // constructs the suggestion engine
            var states = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.whitespace,
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // `states` is an array of state names defined in "The Basics"
                local: states
            });

            $('#bloodhound .typeahead').typeahead({
                hint: true,
                highlight: true,
                minLength: 1
            }, {
                name: 'states',
                source: states
            });
        })(jQuery);
    </script>
}