@using RopeyDVDManagementSystem.Models.ViewModels;
@model IEnumerable<RopeyDVDManagementSystem.Models.ViewModels.DVDReturnModel>;
@{
    ViewData["Title"] = "DVD Return";
    ViewData["Section"] = "DVDReturn";
    Layout = "_LayoutAdmin";

    var dvdReturnDisplay = false;
    var dvdReturn = new DVDReturnModel();
    if(ViewData["LoanRecord"] != null)
    {
        dvdReturn = ViewData["LoanRecord"] as DVDReturnModel;
        dvdReturnDisplay = true;
    }
}






<div class="row">
    <div class="col-12 grid-margin stretch-card">
        <div class="card">
            <div class="card-body mx-3">

                <h4 class="card-title mb-2">DVD Return Station</h4>
                <p class="card-description mb-4"> Choose the copy that you wish to return today </p>
                
                <div class="row">
                    <div class="col">
                        <form asp-action="Index" method="post">
                            <div class="form-group row mb-0">
                                <label class="col-sm-3 col-form-label">Copy number :</label>
                                <div class="col">
                                    <div id="the-basics">
                                        <input class="typeahead" type="text" name="SearchCopyNumber" placeholder="Search . . ." value=@ViewBag.SearchCopyNumber>
                                    </div>
                                </div>
                            </div>

                            <div class="float-right mt-3">
                                <button type="submit" class="btn btn-inverse-primary mr-2" value="Search">
                                    <i class="mdi mdi-magnify" style="align-content:space-evenly;"></i>
                                    Search
                                </button>
                            </div>
                        </form>

                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@if(Model != null && Model.Count() > 0)
{
    <div class="row">
        <div class="col-lg-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body mb-3 mx-3">
                    <div class="table-responsive">
                    
                        <table class="table">
                            <thead>
                                <tr>
                                    <th class="text-white"> DVD Title </th>
                                    <th class="text-white text-center"> Copy Number </th>
                                    <th class="text-white text-center"> Member Name </th>
                                    <th class="text-white text-center"> Date Out </th>
                                    <th class="text-white text-center"> Date Due </th>
                                    <th class="text-white text-center"> Total Loan </th>
                                    <th class="text-white"></th>
                                </tr>
                            </thead>

                            <tbody>
                                @foreach(var data in Model)
                                {
                                    <tr class="border-0">
                                        <td>@data.DVDTitleName</td>
                                        <td class="text-center">@data.CopyNumber</td>
                                        <td class="text-center">@data.MemberName</td>
                                        <td class="text-center">@Html.DisplayFor(modelItem => data.DateOut)</td>
                                        <td class="text-center">@Html.DisplayFor(modelItem => data.DateDue)</td>
                                        <td class="text-center">@data.TotalLoan</td>
                                        <td>
                                            <a type="button" class="btn btn-inverse-success btn-fw float-right" asp-action="ReturnConfirmation" asp-route-LoanID="@data.LoanNumber">
                                                Return
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

}
else if(dvdReturnDisplay)
{
    
    <div class="row">
        <div class="col-lg-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body mx-3" >

                    <h4 class="card-title mb-2">DVD Copy Detail</h4>
                    <p class="card-description mb-4"> Latest Loan Details for the particular DVD Copy </p>
                    
                    <div class="row">
                        <div class="col-md-6 col-sm-12">
                            <div class="form-group row mb-0">
                                <label class="col-sm-4 col-form-label text-gray">DVD Tile :</label>
                                <div class="col">@dvdReturn.DVDTitleName</div>
                            </div>

                            <div class="form-group row mb-0">
                                <label class="col-sm-4 col-form-label text-gray">DVD Category :</label>
                                <div class="col">@dvdReturn.DVDCategory</div>
                            </div>
                            
                            <div class="form-group row mb-0">
                                <label class="col-sm-4 col-form-label text-gray">Copy Number :</label>
                                <div class="col">@dvdReturn.CopyNumber</div>
                            </div>

                            <div class="form-group row mb-0">
                                <label class="col-sm-4 col-form-label text-gray">Member Name :</label>
                                <div class="col">@dvdReturn.MemberName</div>
                            </div>
                        </div>
                    
                        <div class="col-md-6 col-sm-12">
                            
                            <div class="form-group row mb-0">
                                <label class="col-sm-4 col-form-label text-gray">Date Out :</label>
                                <div class="col">@Html.DisplayFor(modelItem => dvdReturn.DateOut)</div>
                            </div>
                            
                            <div class="form-group row mb-0">
                                <label class="col-sm-4 col-form-label text-gray">Date Due :</label>
                                <div class="col">@Html.DisplayFor(modelItem => dvdReturn.DateDue)</div>
                            </div>
                            
                            @if(dvdReturn.OverDue == 1)
                            {
                                <div class="form-group row mb-0">
                                    <label class="col-sm-4 col-form-label text-gray">Date Returned :</label>
                                    <div class="col">@Html.DisplayFor(modelItem => dvdReturn.DateReturned)</div>
                                </div>
                                
                                <div class="form-group row mb-0">
                                    <label class="col-sm-4 col-form-label text-gray">Payment Amount :</label>
                                    <div class="col">@dvdReturn.Payment</div>
                                </div>
                            }
                            else
                            {
                                <div class="form-group row mb-0 mt-4">
                                    <div class="col-md-6 col-sm-12">
                                        <a type="button" class="btn btn-inverse-success btn-fw" asp-action="ReturnConfirmation" asp-route-LoanID="@dvdReturn.LoanNumber">
                                            Return
                                        </a>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
else
{

    <div class="row">
        <div class="col-lg-12 grid-margin stretch-card">
            <div class="card">
                <div class="card-body d-flex flex-column justify-content-center text-center" >

                    <div class="d-flex justify-content-center">
                        <script src="https://unpkg.com/@@lottiefiles/lottie-player@latest/dist/lottie-player.js"></script>
                        <lottie-player src="https://assets7.lottiefiles.com/packages/lf20_a72gydf0.json"  background="transparent"  speed="1"  style="width: 400px; height: 400px;"  loop  autoplay></lottie-player>
                    </div>

                    <p class="text-gray text-center" >Uh Oh! Loan for particular DVD Copy were not found.</p>
                </div>
            </div>
        </div>
    </div>
}






@section AddCustomScripts{
    <script>
        (function($) {
            'use strict';
            var substringMatcher = function(strs) {
                return function findMatches(q, cb) {
                    var matches, substringRegex;
            
                    // an array that will be populated with substring matches
                    matches = [];
            
                    // regex used to determine if a string contains the substring `q`
                    var substrRegex = new RegExp(q, 'i');
            
                    // iterate through the pool of strings and for any string that
                    // contains the substring `q`, add it to the `matches` array
                    for (var i = 0; i < strs.length; i++) {
                        if (substrRegex.test(strs[i])) {
                            matches.push(strs[i]);
                        }
                    }
            
                    cb(matches);
                };
            };
            
            var states = @Html.Raw(ViewBag.LoanedCopyNumberList);
            
            $('#the-basics .typeahead').typeahead({
                hint: true,
                highlight: true,
                minLength: 1
            }, {
                name: 'states',
                source: substringMatcher(states)
            });

            // constructs the suggestion engine
            var states = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.whitespace,
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                // `states` is an array of state names defined in "The Basics"
                local: states
            });
        
            $('#bloodhound .typeahead').typeahead({
                hint: true,
                highlight: true,
                minLength: 1
            }, {
                name: 'states',
                source: states
            });
        })(jQuery);
    </script>
}